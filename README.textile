h1. Bricklayer Manual

Bricklayer builds packages to help you automate builds and upload them to repositories.

h2. Requirements

Bricklayer uses twisted to serve a restful interface as well as the scheduler interface, it also needs Redis 2.0 or higher to store projects. You don't have to bother about twisted because it's already included in the project, but you have to install Redis by yourself.

h2. Installation

Bricklayer has a debian directory ready to be built. To do so under a debian-based system just run (after install Redis):

<pre>
export PYTHONPATH="."
apt-get -y install build-essential devscripts cdbs python-twisted python-setuptools python-simplejson
apt-get -y install python2.5-dev && easy_install multiprocessing ## if using Python 2.5 ##
dpkg-buildpackage -rfakeroot # (inside the project directory)
dpkg -i ../bricklayer*.deb # were * is your architecture and version
</pre>

h2. Usage

Bricklayer has a restful interface that accepts the following parameters:

<pre>
POST /project -> params:
  name="bricklayer" # The project name
  version="1.0-1"   # Initial version (will be incremented by each git commit or hudson git tag)
  git_url="git://host/project/repository.git" # Repository URL to watch
  build_cmd="make"  # Command within your project that generate binaries or prepare your project to be installed
  install_cmd="make install PREFIX=debian/tmp" # A command within your project that install the generated binaries

GET /project/name:
  Return the attributes of the project in JSON format
</pre>

h2. Building ruby applications ?

Bricklayer uses RVM to handle multiple ruby projects to be built in the same machine. To use rvm you must provide a .rvmrc or .rvmrc.example (if you don't want a .rvmrc hanging on your project repository) using the rvmrc syntax as usual. It is highly recommended that you use this if you are building multiples projects using different ruby versions.

h2. What else ?

To come ...

